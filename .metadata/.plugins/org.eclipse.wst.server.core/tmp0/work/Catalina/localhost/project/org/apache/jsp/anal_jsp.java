/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.12
 * Generated at: 2023-12-07 18:12:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import project.SleepCalculator;
import project.CaloriesCalculator;
import project.IllnessCalculator;

public final class anal_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("project.SleepCalculator");
    _jspx_imports_classes.add("project.CaloriesCalculator");
    _jspx_imports_classes.add("project.IllnessCalculator");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("  \r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("      <html>\r\n");
      out.write("\r\n");
      out.write("      <head>\r\n");
      out.write("        <meta charset=\"UTF-8\">\r\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("        <title>Your Health Dashboard</title>\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Montserrat\">\r\n");
      out.write("        <link rel=\"stylesheet\" type=\"text/css\" href=\"styles2.css\">\r\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("        <script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js'></script>\r\n");
      out.write("	\r\n");
      out.write("        <script>\r\n");
      out.write("        // Use fetch to trigger the AnalyticsServlet on page load\r\n");
      out.write("        function fetchAnalyticsData() {\r\n");
      out.write("            fetch('AnalyticsServlet')\r\n");
      out.write("                .then(response => response.json())\r\n");
      out.write("                .then(data => {\r\n");
      out.write("                    // Update the UI based on the analytics data\r\n");
      out.write("                    document.getElementById('predominantEmotion').innerText = data.predominantEmotion;\r\n");
      out.write("                    document.getElementById('undersleptDate').innerText = data.undersleptDate;\r\n");
      out.write("                    document.getElementById('highCaloriesDate').innerText = data.highCaloriesDate;\r\n");
      out.write("                    document.getElementById('mostIllDate').innerText = data.mostIllDate;\r\n");
      out.write("                    document.getElementById('predictedWeightIncrease').innerText = data.predictedWeightIncrease + \"%\";\r\n");
      out.write("                })\r\n");
      out.write("                .catch(error => {\r\n");
      out.write("                    console.error('Error:', error);\r\n");
      out.write("                });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Fetch analytics data on page load\r\n");
      out.write("        fetchAnalyticsData();\r\n");
      out.write("\r\n");
      out.write("        </script>\r\n");
      out.write("\r\n");
      out.write("      </head>\r\n");
      out.write("\r\n");
      out.write("      <body>\r\n");
      out.write("  <div class=\"sidenav\">\r\n");
      out.write("    <a href=\"#\" style=\"padding-bottom: 100px;padding-left: 10px;\"><img style=\"width: 95%;filter: brightness(1);\" src=\"logo.png\"></a>\r\n");
      out.write("    <a href=\"index2.jsp\"><img src=\"dashboard.png\"></a>\r\n");
      out.write("    <a href=\"add.jsp\"><img src=\"add.png\"></a>\r\n");
      out.write("    <a class=\"active\" href=\"anal.jsp\"><img src=\"anal.png\"></a>\r\n");
      out.write("    <a href=\"info.jsp\"><img src=\"info.png\"></a>\r\n");
      out.write("  </div>\r\n");
      out.write("        <div class=\"main\">\r\n");
      out.write("        \r\n");
      out.write("<div class=\"analytics_container\">\r\n");
      out.write("        <!-- Your existing content -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <div class=\"analytics-card\" style=\"width:30%\">\r\n");
      out.write("            <p class=\"analytics-text\">According to your text inputs,  this month you have been mostly feeling\r\n");
      out.write("                <span style=\"font-size:100px\" id=\"predominantEmotion\">[Emotion].</span></p>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"analytics-card\" style=\"width:13%\">\r\n");
      out.write("            <p class=\"analytics-text\">You underslept on <span style=\"font-size:50px\" id=\"undersleptDate\">[Date].</span></p>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"analytics-card\" style=\"width:13%\">\r\n");
      out.write("            <p class=\"analytics-text\">You had most calories on <span style=\"font-size:50px\" id=\"highCaloriesDate\">[Date].</span></p>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"analytics-card\" style=\"width:13%\">\r\n");
      out.write("            <p class=\"analytics-text\">You were most ill on <span style=\"font-size:50px\" id=\"mostIllDate\">[Date].</span></p>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"analytics-card\" style=\"width:30%\">\r\n");
      out.write("            <p class=\"analytics-text\">With respect to your past data, your predicted increase in weight percentage is\r\n");
      out.write("                <span style=\"font-size:100px\" id=\"predictedWeightIncrease\">[Percent].</span></p>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("      </body>\r\n");
      out.write("\r\n");
      out.write("      </html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
